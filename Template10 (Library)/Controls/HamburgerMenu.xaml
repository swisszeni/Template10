<UserControl x:Class="Template10.Controls.HamburgerMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Converters="using:Template10.Converters"
             xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="using:Template10.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             x:Name="ThisPage"
             d:DesignHeight="400"
             d:DesignWidth="400"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            
            <!--The Brushes for the Nav Buttons-->
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <!--Literal-->
                    <SolidColorBrush x:Key="Template10NavLiteralButtonForeground"
                                     Color="Black" />
                    <SolidColorBrush x:Key="Template10NavLiteralButtonBackground"
                                     Color="Transparent" />
                    
                    <!--Toggle-->
                    <SolidColorBrush x:Key="Template10NavToggleButtonForeground"
                                     Color="Black" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonHoverForeground"
                                     Color="Black" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonHoverBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonPressedForeground"
                                     Color="Black" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonPressedBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonCheckedForeground"
                                     Color="Black" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonCheckedBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonCheckedIndicatorBrush"
                                     Color="Black" />
                    

                    <!--Command-->
                    <SolidColorBrush x:Key="Template10NavCommandButtonForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonHoverForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonHoverBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonPressedForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonPressedBackground"
                                     Color="Transparent" />
                    
                </ResourceDictionary>
                <ResourceDictionary x:Key="Default">
                    <!--Literal-->
                    <SolidColorBrush x:Key="Template10NavLiteralButtonForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavLiteralButtonBackground"
                                     Color="Transparent" />

                    <!--Toggle-->
                    <SolidColorBrush x:Key="Template10NavToggleButtonForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonHoverForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonHoverBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonPressedForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonPressedBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonCheckedForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonCheckedBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavToggleButtonCheckedIndicatorBrush"
                                     Color="White" />

                    <!--Command-->
                    <SolidColorBrush x:Key="Template10NavCommandButtonForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonHoverForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonHoverBackground"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonPressedForeground"
                                     Color="White" />
                    <SolidColorBrush x:Key="Template10NavCommandButtonPressedBackground"
                                     Color="Transparent" />
                    
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <Converters:ValueWhenConverter x:Name="ReverseBooleanConverter">
                <Converters:ValueWhenConverter.When>
                    <x:Boolean>True</x:Boolean>
                </Converters:ValueWhenConverter.When>
                <Converters:ValueWhenConverter.Value>
                    <x:Boolean>False</x:Boolean>
                </Converters:ValueWhenConverter.Value>
                <Converters:ValueWhenConverter.Otherwise>
                    <x:Boolean>True</x:Boolean>
                </Converters:ValueWhenConverter.Otherwise>
            </Converters:ValueWhenConverter>

            <Converters:ValueWhenConverter x:Name="ReverseBooleanToVisibilityConverter">
                <Converters:ValueWhenConverter.When>
                    <x:Boolean>True</x:Boolean>
                </Converters:ValueWhenConverter.When>
                <Converters:ValueWhenConverter.Value>
                    <Visibility>Collapsed</Visibility>
                </Converters:ValueWhenConverter.Value>
                <Converters:ValueWhenConverter.Otherwise>
                    <Visibility>Visible</Visibility>
                </Converters:ValueWhenConverter.Otherwise>
            </Converters:ValueWhenConverter>

            <Style x:Key="DefaultHamburgerButtonStyle" TargetType="Button">
                <Setter Property="TabIndex" Value="1" />
                <Setter Property="Height" Value="48" />
                <Setter Property="Width" Value="48" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid"
                                  Width="{TemplateBinding Width}"
                                  Height="{TemplateBinding Height}"
                                  Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <!--<Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>-->
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="HoverOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="PressedOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="PressedOverlay"
                                           Fill="White"
                                           Opacity=".4"
                                           Visibility="Collapsed" />
                                <Rectangle x:Name="HoverOverlay"
                                           Fill="White"
                                           Opacity=".2"
                                           Visibility="Collapsed" />
                                <FontIcon x:Name="ContentPresenter"
                                          FontSize="20"
                                          Foreground="{TemplateBinding Foreground}"
                                          Glyph="&#xE700;" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Width" Value="48" />
            </Style>

            <ControlTemplate x:Key="DefaultNavToggleButtonControlTemplate"
                             TargetType="ToggleButton">
                <Grid x:Name="RootGrid"
                      Width="{Binding PaneWidth, ElementName=ThisPage}"
                      Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavToggleButtonForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavToggleButtonBackground}" />
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavToggleButtonHoverForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavToggleButtonHoverBackground}" />
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavToggleButtonPressedForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavToggleButtonPressedBackground}" />
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Checked">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavToggleButtonCheckedForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavToggleButtonCheckedBackground}" />
                                    <Setter Target="Indicator.Visibility"
                                            Value="Visible" />
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="CheckedPointerOver">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavToggleButtonCheckedForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavToggleButtonCheckedBackground}" />
                                    <Setter Target="Indicator.Visibility"
                                            Value="Visible" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="CheckedPressed">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavToggleButtonCheckedForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavToggleButtonCheckedBackground}" />
                                    <Setter Target="Indicator.Visibility"
                                            Value="Visible" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="CheckedDisabled">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavToggleButtonCheckedForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavToggleButtonCheckedBackground}" />
                                    <Setter Target="Indicator.Visibility"
                                            Value="Visible" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="DimGray" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="Transparent" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Indeterminate" />
                            <VisualState x:Name="IndeterminatePointerOver" />
                            <VisualState x:Name="IndeterminatePressed" />
                            <VisualState x:Name="IndeterminateDisabled" />
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <ContentPresenter x:Name="ContentPresenter"
                                      Content="{Binding Content}" />
                    <Rectangle x:Name="Indicator"
                               Width="4"
                               HorizontalAlignment="Left"
                               Fill="{ThemeResource Template10NavToggleButtonCheckedIndicatorBrush}"
                               Visibility="Collapsed" />
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="DefaultNavCommandButtonControlTemplate"
                             TargetType="Button">
                <Grid x:Name="RootGrid"
                      Width="{Binding PaneWidth, ElementName=ThisPage}"
                      Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavCommandButtonForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavCommandButtonBackground}" />
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavCommandButtonHoverForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavCommandButtonHoverBackground}" />
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="{ThemeResource Template10NavCommandButtonPressedForeground}" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="{ThemeResource Template10NavCommandButtonPressedBackground}" />
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.Foreground"
                                            Value="DimGray" />
                                    <Setter Target="ContentPresenter.Background"
                                            Value="Transparent" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <ContentPresenter x:Name="ContentPresenter"
                                      Content="{Binding Content}" />
                </Grid>
            </ControlTemplate>

            <DataTemplate x:Name="NavButtonLiteralTemplate" x:DataType="local:HamburgerButtonInfo">
                <ContentPresenter x:Name="ContentPresenter"
                                  Width="{Binding PaneWidth, ElementName=ThisPage, Mode=OneWay}"
                                  MinWidth="48"
                                  MaxWidth="{Binding MaxWidth, Mode=OneWay}"
                                  AutomationProperties.Name="{Binding (AutomationProperties.Name), Mode=OneWay}"
                                  Background="{ThemeResource Template10NavLiteralButtonBackground}"
                                  Content="{Binding Content, Mode=OneWay}"
                                  Foreground="{ThemeResource Template10NavLiteralButtonForeground}"
                                  Loaded="NavButton_Loaded"
                                  ToolTipService.ToolTip="{Binding Path=(ToolTipService.ToolTip), Mode=OneWay}"
                                  Visibility="{Binding Visibility, Mode=OneWay}"
                                  Resources="{Binding Resources, Mode=OneTime}" />
            </DataTemplate>

            <DataTemplate x:Name="NavToggleButtonTemplate" x:DataType="local:HamburgerButtonInfo">
                <ToggleButton Width="{Binding PaneWidth, ElementName=ThisPage}"
                              MinWidth="48"
                              MaxWidth="{Binding MaxWidth, Mode=OneWay}"
                              AutomationProperties.Name="{Binding (AutomationProperties.Name), Mode=OneWay}"
                              Checked="NavButton_Checked"
                              Command="{Binding NavCommand, ElementName=ThisPage, Mode=OneWay}"
                              CommandParameter="{Binding Mode=OneWay}"
                              Content="{Binding Content, Mode=OneWay}"
                              Holding="NavButton_Holding"
                              IsChecked="{Binding IsChecked, Mode=TwoWay}"
                              IsEnabled="{Binding IsEnabled_InternalBinding, Mode=OneWay}"
                              IsTabStop="{Binding IsTabStop_InternalBinding, Mode=OneWay}"
                              Loaded="NavButton_Loaded"
                              RightTapped="NavButton_RightTapped"
                              TabIndex="2"
                              Tapped="NavButton_Tapped"
                              ToolTipService.ToolTip="{Binding Path=(ToolTipService.ToolTip), Mode=OneWay}"
                              Unchecked="NavButton_Unchecked"
                              Visibility="{Binding Visibility, Mode=OneWay}"
                              Template="{Binding NavToggleButtonControlTemplate, ElementName=ThisPage}"
                              Resources="{Binding Resources, Mode=OneTime}" />
            </DataTemplate>

            <DataTemplate x:Name="NavCommandButtonTemplate" x:DataType="local:HamburgerButtonInfo">
                <Button Width="{Binding PaneWidth, ElementName=ThisPage, Mode=OneWay}"
                        MinWidth="48"
                        MaxWidth="{Binding MaxWidth, Mode=OneWay}"
                        AutomationProperties.Name="{Binding (AutomationProperties.Name), Mode=OneWay}"
                        BorderBrush="Red"
                        BorderThickness="1"
                        Command="{Binding NavCommand, ElementName=ThisPage, Mode=OneWay}"
                        CommandParameter="{Binding Mode=OneWay}"
                        Content="{Binding Content, Mode=OneWay}"
                        Holding="NavButton_Holding"
                        IsEnabled="{Binding IsEnabled_InternalBinding, Mode=OneWay}"
                        IsTabStop="{Binding IsTabStop_InternalBinding, Mode=OneWay}"
                        Loaded="NavButton_Loaded"
                        RightTapped="NavButton_RightTapped"
                        TabIndex="2"
                        Tapped="NavButton_Tapped"
                        ToolTipService.ToolTip="{Binding Path=(ToolTipService.ToolTip), Mode=OneWay}"
                        Visibility="{Binding Visibility, Mode=OneWay}"
                        Template="{Binding NavCommandButtonControlTemplate, ElementName=ThisPage}"
                        Resources="{Binding Resources, Mode=OneTime}" />
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <!--
    Margin definition was added to correct PageHeader not aligning with the top on AU Platform.
    So far, it is not clear what is causing this (nor whom to attribute to between AU and T10!).
    Top offset value <= -0.4 works and -1 picked as shown below.
    -->
    <RelativePanel x:Name="RootGrid" Margin="0,-1,0,0">

        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup x:Name="VisualStateGroup" CurrentStateChanged="VisualStateGroup_CurrentStateChanged">

                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowTrigger" MinWindowWidth="{Binding VisualStateNarrowMinWidth, ElementName=ThisPage, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <!--  see code-behind  -->
                </VisualState>

                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNormalTrigger" MinWindowWidth="{Binding VisualStateNormalMinWidth, ElementName=ThisPage, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <!--  see code-behind  -->
                </VisualState>

                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateWideTrigger" MinWindowWidth="{Binding VisualStateWideMinWidth, ElementName=ThisPage, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <!--  see code-behind  -->
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SplitView x:Name="ShellSplitView"
                   AutomationProperties.Name="Jerry Nixon"
                   DisplayMode="{x:Bind DisplayMode, Mode=TwoWay}"
                   IsPaneOpen="{x:Bind IsOpen, Mode=TwoWay}"
                   IsTabStop="False"
                   OpenPaneLength="{x:Bind PaneWidth, Mode=OneWay}"
                   PaneBackground="Transparent"
                   RelativePanel.AlignBottomWithPanel="True"
                   RelativePanel.AlignLeftWithPanel="True"
                   RelativePanel.AlignRightWithPanel="True"
                   RelativePanel.AlignTopWithPanel="True">

            <SplitView.Pane>

                <Grid x:Name="PaneContent"
                      Background="{x:Bind NavAreaBackground, Mode=OneWay}"
                      BorderBrush="{x:Bind PaneBorderBrush, Mode=OneWay}"
                      BorderThickness="{x:Bind PaneBorderThickness, Mode=OneWay}"
                      ManipulationDelta="PaneContent_ManipulationDelta"
                      ManipulationMode="TranslateX"
                      Tapped="PaneContent_Tapped">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <ScrollViewer Grid.Row="0"
                                  AutomationProperties.AccessibilityView="Raw"
                                  TabIndex="2"
                                  VerticalScrollBarVisibility="Auto">

                        <ItemsControl x:Name="PrimaryButtonContainer"
                                      IsTabStop="False"
                                      ItemsSource="{Binding PrimaryButtons, ElementName=ThisPage}">

                            <ItemsControl.ItemTemplateSelector>
                                <local:HamburgerButtonTemplateSelected CommandTemplate="{StaticResource NavCommandButtonTemplate}"
                                                                       LiteralTemplate="{StaticResource NavButtonLiteralTemplate}"
                                                                       ToggleTemplate="{StaticResource NavToggleButtonTemplate}" />
                            </ItemsControl.ItemTemplateSelector>

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <!--  designtime  -->
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48"
                                                Height="48"
                                                Symbol="Home" />
                                    <TextBlock Margin="12,0,0,0"
                                               VerticalAlignment="Center"
                                               Text="Lorem ipsum" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48"
                                                Height="48"
                                                Symbol="Admin" />
                                    <TextBlock Margin="12,0,0,0"
                                               VerticalAlignment="Center"
                                               Text="Lorem ipsum" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48"
                                                Height="48"
                                                Symbol="Clock" />
                                    <TextBlock Margin="12,0,0,0"
                                               VerticalAlignment="Center"
                                               Text="Lorem ipsum" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>

                        </ItemsControl>

                    </ScrollViewer>
                    
                    <Rectangle x:Name="NavPaneDividerWide"
                               Grid.Row="1"
                               Grid.ColumnSpan="2"
                               Height="1"
                               Fill="{Binding SecondarySeparator, ElementName=ThisPage, FallbackValue=White}"
                               Margin="16,0,16,4"
                               Visibility="{x:Bind Path=ShellSplitView.IsPaneOpen, Mode=OneWay}" />
                    <Rectangle x:Name="NavPaneDividerNarrow"
                               Grid.Row="1"
                               Height="1"
                               Fill="{Binding SecondarySeparator, ElementName=ThisPage, FallbackValue=White}"
                               Margin="8,0,8,4"
                               Width="32"
                               HorizontalAlignment="Left"
                               Visibility="{x:Bind Path=ShellSplitView.IsPaneOpen, Mode=OneWay, Converter={StaticResource ReverseBooleanToVisibilityConverter}}" />

                    <ItemsControl x:Name="SecondaryButtonContainer"
                                  Grid.Row="2"
                                  IsTabStop="False"
                                  ItemsSource="{Binding SecondaryButtons, ElementName=ThisPage}"
                                  TabIndex="3">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Loaded="SecondaryButtonStackPanel_Loaded" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplateSelector>
                            <local:HamburgerButtonTemplateSelected CommandTemplate="{StaticResource NavCommandButtonTemplate}"
                                                                   LiteralTemplate="{StaticResource NavButtonLiteralTemplate}"
                                                                   ToggleTemplate="{StaticResource NavToggleButtonTemplate}" />
                        </ItemsControl.ItemTemplateSelector>

                        <!--  designtime  -->
                        <local:HamburgerButtonInfo>
                            <StackPanel Orientation="Horizontal">
                                <SymbolIcon Width="48"
                                            Height="48"
                                            Symbol="Contact" />
                                <TextBlock Margin="12,0,0,0"
                                           VerticalAlignment="Center"
                                           Text="Lorem ipsum" />
                            </StackPanel>
                        </local:HamburgerButtonInfo>
                        <local:HamburgerButtonInfo>
                            <StackPanel Orientation="Horizontal">
                                <SymbolIcon Width="48"
                                            Height="48"
                                            Symbol="Setting" />
                                <TextBlock Margin="12,0,0,0"
                                           VerticalAlignment="Center"
                                           Text="Lorem ipsum" />
                            </StackPanel>
                        </local:HamburgerButtonInfo>

                    </ItemsControl>

                </Grid>

            </SplitView.Pane>

        </SplitView>

        <Rectangle x:Name="HeaderBackground"
                   Width="{x:Bind HamburgerButtonGridWidth, Mode=OneWay}"
                   Height="48"
                   Canvas.ZIndex="-1"
                   Fill="{x:Bind HamburgerBackground, FallbackValue=DarkRed, Mode=OneWay}"
                   RelativePanel.AlignLeftWithPanel="True"
                   RelativePanel.AlignTopWithPanel="True" />

        <Button x:Name="HamburgerButton"
                AutomationProperties.Name="Hamburger Menu"
                Background="{x:Bind HamburgerBackground, FallbackValue=DarkRed, Mode=OneWay}"
                Canvas.ZIndex="2"
                Command="{x:Bind HamburgerCommand, Mode=OneWay}"
                Foreground="{x:Bind HamburgerForeground, FallbackValue=White, Mode=OneWay}"
                RenderTransformOrigin="0.5,0.5"
                Style="{x:Bind HamburgerButtonStyle, Mode=OneWay}"
                TabIndex="1"
                Visibility="{x:Bind HamburgerButtonVisibility, Mode=OneWay}">
            <FontIcon FontSize="20" Glyph="&#xE700;" />
        </Button>

        <ContentControl x:Name="Header"
                        Height="48"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Canvas.ZIndex="2"
                        Content="{Binding HeaderContent, ElementName=ThisPage}"
                        IsTabStop="False"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignTopWith="HamburgerButton"
                        RelativePanel.RightOf="HamburgerButton" />

    </RelativePanel>
</UserControl>
